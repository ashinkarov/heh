; This example demonstrates how to define `zip' in Heh.
; `zip' takes two vectors and produce a vector of pairs.

; Helper functions
letrec vecminus = \x.\y. imap |x| {_(iv): (x iv) - (y iv) in
letrec vecplus = \x.\y. imap |x| {_(iv): (x iv) + (y iv) in
letrec min = \x.\y. imap |x| {_(iv): if (x iv) < (y iv) then (x iv) else (y iv) in

letrec zip = \a.\b. imap (min |a| (|b|))|[2]
                         { _(iv): [a iv, b iv] in

; Application example
; (zip [1,2] [3,4,5,6]) [1,0]
; (zip (imap [omega+1] {_(iv): iv [0]) [1,2,3]) [0,1]
; (zip [1,2,3] (imap [omega+1] {_(iv): iv [0])) [0,1]

(zip (imap [omega+4] {_(iv): iv [0])
     (imap [omega+55] {_(iv): iv [0])) [omega,1]

